name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Service A
      uses: docker/build-push-action@v6
      with:
        context: ./service_a
        push: false
        load: true
        tags: service-a:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Service B
      uses: docker/build-push-action@v6
      with:
        context: ./service_b
        push: false
        load: true
        tags: service-b:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set up Kubernetes (KinD)
      uses: engineerd/setup-kind@v0.6.2
      with:
        version: "v0.24.0"

    - name: Load images into KinD
      run: |
        kind load docker-image service-a:latest
        kind load docker-image service-b:latest

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: 'latest'

    - name: Deploy with Helm
      run: |
        helm upgrade --install my-app ./charts/my-app \
          --set service-a.image.tag=latest \
          --set service-b.image.tag=latest

    - name: "Debug: Get all pods"
      run: |
        sleep 15
        kubectl get pods -A -o wide

    - name: "Debug: Describe pods for service-a"
      run: kubectl describe pods -l app.kubernetes.io/name=service-a

    - name: "Debug: Get events"
      run: kubectl get events --sort-by=.metadata.creationTimestamp

    - name: "Debug: Get pod logs for service-a"
      run: |
        for pod in $(kubectl get pods -l app.kubernetes.io/name=service-a -o jsonpath='{.items[*].metadata.name}'); do
          echo "Logs for $pod:"
          kubectl logs $pod || true
        done

    - name: Test Services
      run: |
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=service-a --timeout=90s
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=service-b --timeout=90s
        kubectl port-forward svc/my-app-service-b 8012:8012 &
        sleep 5
        curl -s http://localhost:8012/ping_service_a | grep "Greetings from Service A"
