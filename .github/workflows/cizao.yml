name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy (service_a, service_b, or both)'
        required: false
        default: 'both'
  pull_request:
    branches:
      - main
  # push:
  #   branches:
  #     - main

jobs:
  build:
    strategy:
      matrix:
        service:
          - id: service_a
            name: service-a
            path: ./service_a
          - id: service_b
            name: service-b
            path: ./service_b
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.path }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save service info for deployment
        id: service-info
        if: github.event_name != 'pull_request'
        run: |
          echo "IMAGE_TAG=$(echo ${{ steps.meta.outputs.tags }} | cut -d',' -f1)" >> $GITHUB_OUTPUT

  deploy:
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        # Your cluster connection configuration
        run: |
          # Example for setting up kubeconfig
          # aws eks update-kubeconfig --name your-cluster --region your-region
          echo "Configure your Kubernetes authentication here"

      - name: Get short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy Service A
        run: |
          helm upgrade --install service-a ./charts/service-a \
            --set image.repository=ghcr.io/${{ github.repository_owner }}/service-a \
            --set image.tag=sha-${{ steps.sha.outputs.SHORT_SHA }}

      - name: Deploy Service B
        run: |
          helm upgrade --install service-b ./charts/service-b \
            --set image.repository=ghcr.io/${{ github.repository_owner }}/service-b \
            --set image.tag=sha-${{ steps.sha.outputs.SHORT_SHA }}
